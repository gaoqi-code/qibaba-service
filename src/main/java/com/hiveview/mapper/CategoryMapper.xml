<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.dao.ICategoryDao" >
  <resultMap id="BaseResultMap" type="com.hiveview.entity.Category" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="attribute" property="attribute" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, full_name, level, add_time, type, status,
    attribute,code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from j_class
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from j_class
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteCategoryByCode" parameterType="java.lang.String" >
    delete from j_class
    where code like  CONCAT(#{code},'%')
  </delete>
  <insert id="insert" parameterType="com.hiveview.entity.Category" >
    insert into j_class (id, name, full_name, 
      level,  add_time, type,
      status, attribute)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR},
      #{level,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT}, #{attribute,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hiveview.entity.Category" >
    insert into j_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="fullName != null" >
        full_name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="attribute != null" >
        attribute,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null" >
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>

      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="attribute != null" >
        #{attribute,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hiveview.entity.Category" >
    update j_class
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null" >
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>

      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="attribute != null" >
        attribute = #{attribute,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hiveview.entity.Category" >
    update j_class
    set name = #{name,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},

      add_time = #{addTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      attribute = #{attribute,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getList" resultMap="BaseResultMap" parameterType="com.hiveview.entity.Category" >
    select
    <include refid="Base_Column_List" />
    from j_class
    <where>
      <if test="id != null" >
        id = #{id,jdbcType=BIGINT}
      </if>
      <if test="name != null " >
       AND name like CONCAT('%',#{name},'%')
      </if>
      <if test="fullName != null" >
        AND full_name = #{fullName,jdbcType=VARCHAR}
      </if>
      <if test="level != null" >
        AND level = #{level,jdbcType=TINYINT}
      </if>

      <if test="type != null" >
        AND type = #{type,jdbcType=TINYINT}
      </if>
      <if test="status != null" >
        AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="code != null" >
        AND  code like  CONCAT(#{code},'%')
      </if>
    </where>
  </select>
  <select id="getSonCategory" resultMap="BaseResultMap" parameterType="long" >
    select
    <include refid="Base_Column_List" />
    from j_class
    WHERE  parent_id = #{parentId}
  </select>

    <delete id="batchDelete" parameterType="java.util.List">
      DELETE FROM j_class WHERE id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </delete>
</mapper>